@model Scheduling.Models.ReportProjectDisplayViewModel


@{
    ViewBag.Title = "Generate Reports ";
    Layout = "~/Views/Shared/_ResponsiveLayout.cshtml";
    int NewsstandID = Convert.ToInt32(Scheduling.StringFunctions.Utility.GetAppSettingValue("NewsstandOnSaleDateMilestoneValue"));

}
<!--Used to invoke pdf controller with pdf reporting attribute..click event in reporting.js-->
@{

    if (Model.ProjectDisplayList.Count > 0)
    {
        Session["ProjectDisplayResultSet"] = Model.ProjectDisplayList;

        Html.BeginForm("ExcelStyleReportsPDFNewsStandReportForCirc", "Reporting", FormMethod.Post, new { enctype = "multipart/form-data", id = "ExportToPDF" });
        Html.EndForm();

        Html.BeginForm("ExcelStyleReportsPDFReplicateView", "Reporting", FormMethod.Post, new { enctype = "multipart/form-data", id = "ExportToPDFReplicateView" });
        Html.EndForm();

        Html.BeginForm("ExcelStyleReportsViewFormatRevised", "Reporting", FormMethod.Post, new { enctype = "multipart/form-data", id = "ExportToPDFRevisedView" });
        Html.EndForm();

    }


}
<h5>
    <img src="@Url.Content("~/images/export-to-pdf.jpg")" alt='export-to-pdf' style='width:25px;padding-left:10px' class='export-to-pdf' />
    <span>On Sale Dates</span>
</h5>

<h5>
    <img src="@Url.Content("~/images/export-to-pdf.jpg")" alt='export-to-pdf' style='width:25px;padding-left:10px' class='export-to-pdf-revised-view' /><span>
        Project Production Schedules
    </span>
</h5>
<div class="container excel-style-results-selector">
    <!--Filter By Pubcode And Year-->
    @{ Html.BeginForm("GenerateReportsFiltered", "Reporting", FormMethod.Post, new { enctype = "multipart/form-data", id = "ExcelStyleReportsForm" }); }
    <div class="sixteen columns">
        <!--Filter by pubcode-->
        <div class='four columns'>
            <span class='pubcode-year-filter'>Filter By PubCode and Year</span>
        </div>
        <div class='three columns'>
            <select name='pubcode' class='list-project-select-filter'>
                <option value=''>--Choose Pubcode --</option>
                @Html.Raw(Scheduling.Html.ViewDropdown.BuildPreselectedPublicationDropdown(ViewBag.CurrentPubCode))
            </select>
        </div>
        <div class='three columns'>
            <select name='year' class='list-project-select-filter'>
                <option value=''>-- Choose Year --</option>
                @Html.Raw(Scheduling.Html.ViewDropdown.BuildPreselectedYearDropdownForReporting(ViewBag.CurrentYearCode))
            </select>
        </div>
        <div class='three columns'>
            <input type='submit' class='excel-style-submit-form' />
        </div>
        @{ Html.EndForm(); }
    </div>

    <!--Filter By Pubcode/Timeline Range/Year-->
    @{ Html.BeginForm("GenerateReportsFiltered", "Reporting", FormMethod.Post, new { enctype = "multipart/form-data", id = "ExcelStyleReportsFormFilterByTimelineRange" }); }
    <div class="sixteen columns">
        <!--Filter by pubcode-->
        <div class='four columns'>
            <span class='pubcode-year-filter'>Filter By PubCode/Timeline Range</span>
        </div>
        <div class='three columns'>
            <input type='text' class='monthPicker timelineRangeStart' name='timelineRangeStart' value='@ViewBag.PersistedStart' />
        </div>
        <div class='three columns'>
            <input type='text' class='monthPicker timelineRangeEnd' name='timelineRangeEnd' value='@ViewBag.PersistedStop' />
        </div>
        <div class='three columns'>
            <select name='pubcode-timeline' class='list-project-select-filter-timeline-range' multiple="multiple">
                <option value=''>All Pubcodes</option>
                @Html.Raw(Scheduling.Html.ViewDropdown.BuildPreselectedMultiplePublicationDropdown(ViewBag.CurrentPubCodeList))
            </select>
        </div>
        <div class='two columns'>
            <input type='submit' class='excel-style-submit-form-timeline-range' />
        </div>
        @{ Html.EndForm(); }
    </div>
    <div class='sixteen columns'>
        <div class='error-message'>
        </div>
    </div>
</div>
<div class='excel-style-results'>

    @if (Model.ProjectDisplayList.Count > 0)
    {
             <!--PubCodeSummary-->
        <h5 style="font-style: italic; border-top: 1px solid #ccc; border-bottom: 1px solid #ccc; color: #808080;word-wrap:break-word;">@string.Concat("Pub Code Report Includes ", Model.PubCodeSummary)</h5>


        if (Model.DisplaySections.Count > 0)
        {
            foreach (Scheduling.Models.ReportProjectDisplayViewModelSection sec in Model.DisplaySections)
            {

                <div class="project-container" style="padding-top:40px">
                    <div style="overflow:hidden">
                        <div style="float:left">
                            <h5 class='main-header'>@sec.SectionHeader.YearMonthHeader</h5>
                        </div>

                        <div style='float:left;margin-left:60%;'>

                            <h5 class='main-header'>Revised @sec.SectionHeader.RevisedHeader</h5>
                        </div>

                        <div style='float:right;margin-right:5%;'>

                            <h5 class='main-header'>@sec.SectionHeader.PubcodeHeader</h5>
                        </div>


                    </div>

                    <!--notes start-->

                    @if (sec.SectionHeader.NotesAreAvailable)
                    {

                        <table>
                          
                            <tr>
                                <td style='border: none'></td>
                                @if (!string.IsNullOrEmpty(sec.SectionHeader.KPCProjectNumber))
                                {

                                    <td colspan="4" style="border:none;font-weight:bold">
                                        @string.Concat("KPC Project Number: ",sec.SectionHeader.KPCProjectNumber)

                                    </td>
                                }

                                @if (!string.IsNullOrEmpty(sec.SectionHeader.QuadJobNumber))
                                {

                                    <td colspan="4" style="border:none;font-weight:bold">
                                        @string.Concat("Quad Job #: ", sec.SectionHeader.QuadJobNumber)

                                    </td>
                                }

                                @if (!string.IsNullOrEmpty(sec.SectionHeader.NextIssueCrossPromoNumber))
                                {

                                    <td colspan="4" style="border:none;font-weight:bold">
                                      @string.Concat("Next Issue And Cross Promo Ads: ", sec.SectionHeader.NextIssueCrossPromoNumber);

                                    </td>
                                }


                            </tr>

                        </table>

                    }

                    <!--notes stop-->

                    <!--top item container start-->

                    <table class="top-item-container">
                        <tr>
                            <td class='empty'></td>
                            @{
                                foreach (Scheduling.Models.MilestoneDisplayRecord mdr in sec.TopRecords)
                                {
                                    <td class="@mdr.CssClass">@mdr.Description</td>

                                }

                            }

                        </tr>

                        <tr class="parent-due-date">
                            <td class='empty'></td>
                            @{
                                foreach (Scheduling.Models.MilestoneDisplayRecord mdr in sec.TopRecords)
                                {
                                    <td class="parent-due-date">@mdr.Value</td>

                                }

                            }

                        </tr>

                    </table>

                    <!--sub items-->

                    @if (sec.SubItemRows.Count > 0)
                    {
                        <table class="calculation">

                            @foreach (Scheduling.Models.SubItemRow sir in sec.SubItemRows)
                            {
                                <tr>
                                    <td style="width:100px">@sir.Description</td>


                                    @foreach (string s in sir.SubItemDates)
                                    {
                                        <td class="calcValue" style="text-align:center;font-size:1.1em">@s</td>

                                    }
                                </tr>
                            }

                        </table>

                    }

                    <!--sub items stop-->
                    
                </div>

                                        }

                                    }


                                }

    @if (Model.ProjectDisplayList.Count == 0 && ViewBag.InitialLoad == "N")
    {
        <p style='font-weight: bold'>
            No matching results
        </p>

    }


</div>
<script src=@Url.Content("~/Scripts/Bundled/DatepickerMonthOnly.js") type="text/javascript"></script>
<script src=@Url.Content("~/Scripts/Bundled/lodash.js") type="text/javascript"></script>

<!--test mode defined in globalvars-->
<script type='text/javascript'>

    $(document).ready(function () {

        $('table.calculation tbody tr:nth-child(odd)').css('background-color', '#ccc');

        //client side val on pubcode/year submit

        //prepopulate
        //$('.timelineRangeStart').val('2016-01');
        //$('.timelineRangeEnd').val('2017-02');

        $('#ExcelStyleReportsForm').submit(function () {

            $('.error-message').html('');

            var pubcodeSel = $('#ExcelStyleReportsForm select.list-project-select-filter').eq(0);

            var yearSel = $('#ExcelStyleReportsForm select.list-project-select-filter').eq(1);

            var pubcodeSelVal = $(pubcodeSel).val();
            var yearSelVal = $(yearSel).val();

            //use lodash library for ease of detection (better than isNan(parseInt) !

            if (_.size(pubcodeSelVal) > 0 && _.size(yearSelVal) > 0) {

                return true;
            }

            else {
                $('.error-message').html('Please Choose A Pubcode And Year');
                return false;
            }





        });


        //date range validation done on datepickermonthonly js file

    });

</script>

